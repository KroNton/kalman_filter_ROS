<?xml version="1.0" encoding="UTF-8"?>
<!-- Top-level launch file for Unit 5, "Particle Filter" Exercise 1 -->
<!-- Requires: Gazebo Jackal.world simulation, e.g. gazebo_unit5_simulation.launch -->

<launch>

  <!-- Run the map server -->
  <arg name="map" default="$(find particle_filter)/maps/jackal_race.yaml"/>
  <node type="map_server" pkg="map_server" name="map_server_node" output="screen" args="$(arg map)">
    <!-- <param name="frame_id" value="/map" /> -->
  </node>

  <!-- Broadcast TF values for all fixed elements in the URDF description tree such as the IMU -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  <!-- Broadcast TF values for all moving elements in the URDF description tree such as wheels -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <!-- Determine whether to run Rviz or not & set Rviz config file-->
  <arg name="use_rviz" default="true" />
  <arg name="rvizconfig" default="$(find particle_filter)/rviz/project_exercise.rviz"/>
  <!-- Launching Rviz -->
  <node if="$(arg use_rviz)" name="rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(arg rvizconfig)" output="log"/>


  <!-- Arguments for set_gazebo_model_node with defaults provided -->
  <!-- The name of the package where URDF file is located -->
  <arg name="package_name" default="particle_filter"/>
  <!-- The relative path of the URDF file inside the package, including .urdf extension -->
  <arg name="relative_path" default="/urdf/turtlebot2.urdf"/>
  <!-- Assign the name of the robot model in Gazebo -->
  <arg name="model_name_in_simulation" default="robot_base"/>
  <!-- Set initial pose estimate mean -->
  <arg name="initial_x"  default="-3.5"/>
  <arg name="initial_y"  default="5.0"/>
  <arg name="initial_a"  default="0.0"/>

  <node name="set_gazebo_model_node" pkg="particle_filter" type="set_gazebo_model.py" output="screen">
    <!-- Set a private parameters in the node's ~/local namespace -->
    <param name="package_name" type="string" value="$(arg package_name)"/>
    <param name="relative_path" type="string" value="$(arg relative_path)"/>
    <param name="model_name_in_simulation" type="string" value="$(arg model_name_in_simulation)"/>
    <param name="initial_pose_x"            value="$(arg initial_x)"/>
    <param name="initial_pose_y"            value="$(arg initial_y)"/>
    <param name="initial_pose_a"            value="$(arg initial_a)"/>
  </node>

    <node pkg="tf" type="static_transform_publisher" name="map_odom_tf" args="0 0 0 0 0 0 1.0 map odom 200" />
    <node pkg="tf" type="static_transform_publisher" name="lsm_odom_tf" args="$(arg initial_x) $(arg initial_y) 0 0 0 0 1.0 map lsm 200" />
  <!-- laser_scan_matcher configured -->

  <node pkg="laser_scan_matcher_odometry" type="laser_scan_matcher_odometry_node" name="laser_scan_matcher_node" output="screen">

    <remap from="imu" to="/mobile_base/sensors/imu_data_raw"/>
    <remap from="scan" to="/kobuki/laser/scan"/>
    <remap from="odom" to="/odom"/>
    <remap from="odom_out" to="/laser_scan_matcher/odom"/>

    <param name="fixed_frame" value = "lsm"/>
    <param name="base_frame" value = "base_footprint"/>
    <param name="publish_tf" value = "false"/>
    <param name="max_iterations" value="10"/>


  </node>

</launch>
